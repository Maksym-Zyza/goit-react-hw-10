{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/Container/Container.js","components/UserMenu/default-avatar.png","redux/todos/todos-actions.js","redux/auth/auth-selectors.js","components/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/todos/todos-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","logOut","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","createAction","Container","children","className","module","exports","fetchTodosRequest","fetchTodosSuccess","fetchTodosError","addTodoRequest","addTodoSuccess","addTodoError","deleteTodoRequest","deleteTodoSuccess","deleteTodoError","toggleCompletedRequest","toggleCompletedSuccess","toggleCompletedError","changeFilter","state","isAuthenticated","user","name","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","useDispatch","onLogOut","useCallback","authOperations","src","defaultAvatar","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","TodosView","App","useEffect","fallback","path","items","createReducer","_","payload","filter","id","map","todo","loading","error","combineReducers","initialUserState","email","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","todos","todosReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d349ae0.chunk.js","sourcesContent":["import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://lpj-tasker.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logOut, logIn, getCurrentUser };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","module.exports = __webpack_public_path__ + \"static/media/default-avatar.ccafcf34.png\";","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchTodosRequest = createAction('todos/fetchTodosRequest');\nexport const fetchTodosSuccess = createAction('todos/fetchTodosSuccess');\nexport const fetchTodosError = createAction('todos/fetchTodosError');\n\nexport const addTodoRequest = createAction('todos/addTodoRequest');\nexport const addTodoSuccess = createAction('todos/addTodoSuccess');\nexport const addTodoError = createAction('todos/addTodoError');\n\nexport const deleteTodoRequest = createAction('todos/deleteTodoRequest');\nexport const deleteTodoSuccess = createAction('todos/deleteTodoSuccess');\nexport const deleteTodoError = createAction('todos/deleteTodoError');\n\nexport const toggleCompletedRequest = createAction(\n  'todos/toggleCompletedRequest',\n);\nexport const toggleCompletedSuccess = createAction(\n  'todos/toggleCompletedSuccess',\n);\nexport const toggleCompletedError = createAction('todos/toggleCompletedError');\n\nexport const changeFilter = createAction('todos/changeFilter');\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Главная\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/todos\"\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Заметки\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport defaultAvatar from \"./default-avatar.png\";\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  const onLogOut = useCallback(() => {\n    dispatch(authOperations.logOut());\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <img src={defaultAvatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Welcome, {name}</span>\n      <button type=\"button\" onClick={onLogOut}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst styles = {\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid #2A363B\",\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nexport default function PrivateRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nexport default function PublicRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n","import React, { Suspense, lazy, useEffect } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport AppBar from \"./components/AppBar\";\nimport Container from \"./components/Container\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst TodosView = lazy(() => import(\"./views/TodosView\"));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Suspense fallback={<p>Загружаем...</p>}>\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/todos\">\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/todos\">\n            <LoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/todos\" redirectTo=\"/login\">\n            <TodosView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addTodoRequest,\n  addTodoSuccess,\n  addTodoError,\n  deleteTodoRequest,\n  deleteTodoSuccess,\n  deleteTodoError,\n  changeFilter,\n  toggleCompletedRequest,\n  toggleCompletedSuccess,\n  toggleCompletedError,\n  fetchTodosRequest,\n  fetchTodosSuccess,\n  fetchTodosError,\n} from './todos-actions';\n\nconst items = createReducer([], {\n  [fetchTodosSuccess]: (_, { payload }) => payload,\n  [addTodoSuccess]: (state, { payload }) => [...state, payload],\n  [deleteTodoSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n  [toggleCompletedSuccess]: (state, { payload }) =>\n    state.map(todo => (todo.id === payload.id ? payload : todo)),\n});\n\nconst loading = createReducer(false, {\n  [fetchTodosRequest]: () => true,\n  [fetchTodosSuccess]: () => false,\n  [fetchTodosError]: () => false,\n  [addTodoRequest]: () => true,\n  [addTodoSuccess]: () => false,\n  [addTodoError]: () => false,\n  [deleteTodoRequest]: () => true,\n  [deleteTodoSuccess]: () => false,\n  [deleteTodoError]: () => false,\n  [toggleCompletedRequest]: () => true,\n  [toggleCompletedSuccess]: () => false,\n  [toggleCompletedError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n// import logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport todosReducer from \"./todos/todos-reducer\";\nimport authReducer from \"./auth/auth-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    todos: todosReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n\n// export default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport * as store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}